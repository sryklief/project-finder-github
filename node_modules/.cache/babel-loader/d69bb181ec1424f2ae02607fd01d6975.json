{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saadiq\\\\react-app\\\\src\\\\context\\\\github\\\\GithubState.js\";\nimport React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport GithubReducer from \"./githubReducer\";\nimport GithubContext from \"./githubContext\";\nimport { SEARCH_USER, SET_LOADING, CLEAR_USERS, GET_USER, GET_REPOS } from \"../types\";\nlet githubClientId;\nlet githubClientSecret;\n\nif (process.env.NODE_ENV !== 'production') {\n  githubClientId = process.env.REACT_APP__GITHUB_CLIENT_ID;\n  githubClientSecret = process.env.REACT_APP__GITHUB_CLIENT_SECRECT;\n} else {\n  githubClientId = process.env.GITHUB_CLIENT_ID;\n  githubClientSecret = process.env.GITHUB_CLIENT_SECRECT;\n}\n\nconst GithubState = props => {\n  const intialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false\n  };\n  const [state, dispatch] = useReducer(GithubReducer, intialState); // Search Users\n\n  const searchUsers = async text => {\n    setLoading(true);\n    const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${githubClientId}&client_secret=${githubClientSecret}`);\n    dispatch({\n      type: SEARCH_USER,\n      payload: res.data.items\n    });\n  }; // Get User\n\n\n  const getUser = async username => {\n    setLoading();\n    const res = await axios.get(`https://api.github.com/users/${username}?client_id=${githubClientId}&client_secret=${githubClientSecret}`);\n    dispatch({\n      type: GET_USER,\n      payload: res.data\n    });\n  }; // Get Repos\n\n\n  const getUserRepos = async username => {\n    setLoading();\n    const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${githubClientId}&client_secret=${githubClientSecret}`);\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n  }; // Clear Users\n\n\n  const clearUsers = () => dispatch({\n    type: CLEAR_USERS\n  }); // Set Loading\n\n\n  const setLoading = () => dispatch({\n    type: SET_LOADING\n  });\n\n  return /*#__PURE__*/React.createElement(GithubContext.Provider, {\n    value: {\n      users: state.users,\n      user: state.user,\n      repos: state.repos,\n      loading: state.loading,\n      searchUsers,\n      clearUsers,\n      getUser,\n      getUserRepos\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 3\n    }\n  }, props.children);\n};\n\nexport default GithubState;","map":{"version":3,"sources":["C:/Users/Saadiq/react-app/src/context/github/GithubState.js"],"names":["React","useReducer","axios","GithubReducer","GithubContext","SEARCH_USER","SET_LOADING","CLEAR_USERS","GET_USER","GET_REPOS","githubClientId","githubClientSecret","process","env","NODE_ENV","REACT_APP__GITHUB_CLIENT_ID","REACT_APP__GITHUB_CLIENT_SECRECT","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRECT","GithubState","props","intialState","users","user","repos","loading","state","dispatch","searchUsers","text","setLoading","res","get","type","payload","data","items","getUser","username","getUserRepos","clearUsers","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport GithubReducer from \"./githubReducer\";\nimport GithubContext from \"./githubContext\";\nimport {\n\tSEARCH_USER,\n\tSET_LOADING,\n\tCLEAR_USERS,\n\tGET_USER,\n\tGET_REPOS,\n} from \"../types\";\n\nlet githubClientId;\nlet githubClientSecret;\n\nif (process.env.NODE_ENV !== 'production') {\n\tgithubClientId = process.env.REACT_APP__GITHUB_CLIENT_ID;\n\tgithubClientSecret = process.env.REACT_APP__GITHUB_CLIENT_SECRECT;\n} else {\n\tgithubClientId = process.env.GITHUB_CLIENT_ID;\n\tgithubClientSecret = process.env.GITHUB_CLIENT_SECRECT;\n}\n\nconst GithubState = (props) => {\n\tconst intialState = {\n\t\tusers: [],\n\t\tuser: {},\n\t\trepos: [],\n\t\tloading: false,\n\t};\n\n\tconst [state, dispatch] = useReducer(GithubReducer, intialState);\n\n\t// Search Users\n\tconst searchUsers = async (text) => {\n\t\tsetLoading(true);\n\t\tconst res = await axios.get(\n\t\t\t`https://api.github.com/search/users?q=${text}&client_id=${githubClientId}&client_secret=${githubClientSecret}`\n\t\t);\n\n\t\tdispatch({\n\t\t\ttype: SEARCH_USER,\n\t\t\tpayload: res.data.items,\n\t\t});\n\t};\n\n\t// Get User\n\tconst getUser = async (username) => {\n\t\tsetLoading();\n\t\tconst res = await axios.get(\n\t\t\t`https://api.github.com/users/${username}?client_id=${githubClientId}&client_secret=${githubClientSecret}`\n\t\t);\n\n\t\tdispatch({\n\t\t\ttype: GET_USER,\n\t\t\tpayload: res.data,\n\t\t});\n\t};\n\n\t// Get Repos\n\tconst getUserRepos = async (username) => {\n\t\tsetLoading();\n\t\tconst res = await axios.get(\n\t\t\t`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${githubClientId}&client_secret=${githubClientSecret}`\n\t\t);\n\t\tdispatch({\n\t\t\ttype: GET_REPOS,\n\t\t\tpayload: res.data,\n\t\t});\n\t};\n\n\t// Clear Users\n\tconst clearUsers = () => dispatch({ type: CLEAR_USERS });\n\n\t// Set Loading\n\tconst setLoading = () => dispatch({ type: SET_LOADING });\n\n\treturn (\n\t\t<GithubContext.Provider\n\t\t\tvalue={{\n\t\t\t\tusers: state.users,\n\t\t\t\tuser: state.user,\n\t\t\t\trepos: state.repos,\n\t\t\t\tloading: state.loading,\n\t\t\t\tsearchUsers,\n\t\t\t\tclearUsers,\n\t\t\t\tgetUser,\n\t\t\t\tgetUserRepos,\n\t\t\t}}\n\t\t>\n\t\t\t{props.children}\n\t\t</GithubContext.Provider>\n\t);\n};\n\nexport default GithubState;\n"]},"metadata":{},"sourceType":"module"}